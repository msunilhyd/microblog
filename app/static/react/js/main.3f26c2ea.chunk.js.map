{"version":3,"sources":["../node_modules/jsdom/lib/jsdom sync","../node_modules/jsdom/node_modules/parse5/lib sync","quiz/questions/CreateChoices.js","quiz/questions/Question.js","quiz/questions/Questions.js","quiz/questions/Navigation/QuestionButton.js","quiz/questions/QuestionsNavigation.js","quiz/questions/DisplayScore.js","timer/Timer.js","quiz/Quiz.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","CreateChoices","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","selectChoice","event","$radio","$","target","data","prop","handleSelection","questionCounter","undefined","val","closest","find","each","index","elem","bind","assertThisInitialized","_this2","choices","map","choice","selected","react_default","a","createElement","key","type","name","checked","wasChecked","className","value","onClick","endsWith","for","alt","src","React","Component","Question","img_file","question","question_image","section","questions_CreateChoices","Questions","nextHandler","preventDefault","prevHandler","selectionArray","toConsumableArray","state","selections","setState","previousState","console","log","questions","length","questions_Question","href","QuestionButton","handleRandomQuesFun","randomQuesFun","i","buttonClass","attr","removeClass","addClass","handleQuestionNavigation","local_section","buttons","class","QuestionsNavigation","Navigation_QuestionButton","DisplayScore","displayScore","score","positive_marks_1","parseInt","text","negative_marks_1","totalMarks","positive_score","negative_score","no_of_correct_ans_ques","no_of_wrong_ans_ques","no_of_not_ans_ques","no_of_attempted_ans_ques","section_total_score_map","Map","section_positive_score_map","section_negative_score_map","section_attempted_questions_map","section_un_attempted_questions_map","section_correct_attempted_questions_map","section_wrong_attempted_questions_map","set","questionsAns","answers","userAns","correctAnswer","section_score","get","section_score_positive","section_attempted_questions","section_correct_attempted_questions","isNaN","section_un_attempted_questions","section_score_negative","section_wrong_attempted_questions","finalScore","timeTakenForTest","updateUserScore","test_id","testId","replace","user_id","Timer","time","minutes","isOn","timer","setInterval","prevState","clearInterval","handleTimeOut","secs","hours","Math","floor","divisor_for_minutes","divisor_for_seconds","seconds","ceil","secondsToTime","Quiz","handleStartTest","hide","quizStarted","submitQuiz","timesUp","getAnswers","submitted","ajax","url","success","JSON","parse","error","getQuestions","parsedData","timeRemainderInMin","setConfirmMessage","document","timer_Timer","questions_DisplayScore","questions_Questions","questions_QuestionsNavigation","App","quiz_Quiz","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"js/main.3f26c2ea.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 719;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 751;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport $ from 'jQuery';\n\nclass CreateChoices extends React.Component {\n  \n\n  constructor(props) {\n    super(props);\n    this.selectChoice = this.selectChoice.bind(this);\n  }\n\n  selectChoice = (event) => {\n    var $radio = $(event.target) // if this was previously checked\n    if ($radio.data('waschecked') == true) {\n      $radio.prop('checked', false);\n      $radio.data('waschecked', false);\n      this.props.handleSelection(this.props.questionCounter,undefined);\n    } else {\n        $radio.data('waschecked', true); // remove was checked from other radio\n        this.props.handleSelection(this.props.questionCounter,$radio.val());\n    }\n    $radio.closest(\"ul\").find('input').each(function(index, elem) {\n        if (elem != event.target) {\n            $(elem).data('waschecked', false);\n        }\n    });\n  }\n\n    render() {\n      let choices = this.props.choices.map((choice,index) => {\n      let id = this.props.questionCounter +\"\" + index;\n      let selected = this.props.selected ? true : false;\n      return (<li key={index}>\n        {this.props.selected && index == this.props.selected ? \n        <input type=\"radio\" name=\"answer\" checked=\"true\" wasChecked=\"true\" className=\"radioclass\" id={id} value={index} onClick={this.selectChoice} />\n        :<input type=\"radio\" name=\"answer\" wasChecked=\"false\" className=\"radioclass\" id={id} value={index} onClick={this.selectChoice} />\n        }\n\n        {choice.endsWith(\".png\") ? (\n          <label for={id}><img alt=\"choice\" src={\"/static/questions/\" + this.props.choice}/></label>\n        ):(\n           <label for={id}>{choice}</label>\n        )}\n     </li>)\n     });\n    return (\n        <div>\n          <ul>\n            {choices}\n          </ul>\n        </div>\n    );\n  }\n}\n\n\nexport default CreateChoices;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport $ from 'jQuery';\nimport CreateChoices from './CreateChoices.js'\nimport MathJax from 'mathjax'\n\nclass Question extends React.Component {\n  \n\n  constructor(props){\n    super(props);\n  }\n \n\n  componentDidMount() {\n   \n     /*let math = MathJax.Hub.getAllJax(\"question\"+this.props.questionCounter);\n     MathJax.Hub.Queue([\"Typeset\", MathJax.Hub, math]);*/\n    \n\n  }\n\n  render() {\n        \n    let  img_file = \"\";\n\n    if (typeof this.props.question.question_image == \"string\") {\n      let src = \"/static/questions/\"+this.props.question.question_image;\n      img_file  = <img src={src} />;\n    }\n\n    return (\n        <div>\n          <div id={\"question\"+this.props.questionCounter}>\n            <h2>Question - {this.props.questionCounter + 1} <span className=\"section\">Section : {this.props.question.section}</span></h2>\n            <p>{this.props.question.question}</p>\n            <CreateChoices handleSelection= {this.props.handleSelection} questionCounter = {this.props.questionCounter} choices={this.props.question.choices} selected={this.props.selected}/>\n           {img_file}\n          </div>\n        </div>\n    );\n  }\n\n}\n\n\nQuestion.propTypes = {\n  question: React.PropTypes.object.isRequired\n};\n\n\nexport default Question;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport $ from 'jQuery';\nimport Question from './Question.js'\n\nclass Questions extends React.Component {\n  \n\n  constructor(props) {\n    super(props);\n    this.state = {\n      selections : []\n     };\n  }\n\n\n  \n\n\n  componentDidMount() {\n    \n  }\n\n  componentWillUnmount() {\n  }\n\n\n  nextHandler = (e) => {\n    e.preventDefault();\n    this.props.nextHandler();\n  }\n\n  prevHandler = (e) => {\n    e.preventDefault();\n    this.props.prevHandler();\n  }\n\n  handleSelection = (questionCounter,value) => {\n    let selectionArray = [...this.state.selections];\n    selectionArray[questionCounter]=value;\n    this.props.handleSelection(selectionArray);\n    this.setState(previousState => {\n      return { selections: selectionArray}\n    });\n\n  }\n\n  render() {\n    console.log(this.props.questionCounter);\n    let questions = this.props.questions;\n    if(questions.length < 1){\n      return (<div><Question questionCounter={this.props.questionCounter} question={{}}/></div>)\n    } else {\n      return (\n        <div>\n          {questions.length ==  this.props.questionCounter && questions.length? \n            (\n              <div id='end_of_test_div' className='end_of_test_div' >Reached End of Test.</div>\n            ) :\n            (\n              <Question handleSelection={this.handleSelection} questionCounter={this.props.questionCounter}  question={questions[this.props.questionCounter]} selected={this.state.selections[this.props.questionCounter]} />\n            )\n          }\n\n          {this.props.questionCounter < questions.length && this.props.questionCounter > 0 && <div className='prev_next' id='prev'><a href='#' onClick={this.prevHandler}>Prev</a></div>}\n          {this.props.questionCounter < questions.length && questions.length > 1 &&  this.props.questionCounter != questions.length-1 && <div className='prev_next' id='next'><a href='#' onClick={this.nextHandler}>Next</a></div>}\n        \n        </div>\n      );\n    }\n  }\n}\nexport default Questions;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport $ from 'jQuery';\n\nclass QuestionButton extends React.Component {\n  \n\n  constructor(props) {\n    super(props);\n  }\n\n  handleRandomQuesFun = (event) =>{\n    let index = event.target.value-1;\n    this.randomQuesFun(index);\n  }\n\n  randomQuesFun = (i) =>  {\n    let buttonClass = $('#random' + i).attr(\"class\");\n    $('.randomClass').removeClass(\"yellow\");\n    $('#random' + i).addClass(buttonClass + \" yellow\");\n    this.props.handleQuestionNavigation(i);\n  }\n\n  render() {\n        \n\n    \n    let questions = this.props.questions;\n    let local_section = questions[0].section;\n    let section = \"\";\n    let buttons = this.props.questions.map((question,index) => {\n       if(index == 0 || question.section != local_section){\n          local_section = question.section;\n          section = <div id=\"section_at_test\" className=\"section_at_test\">{question.section}</div> \n        } else {\n          section=\"\";\n        }\n        return(\n          <li>\n            {section}\n            {this.props.selections[index] ? (\n            <input type=\"button\" name=\"random\" class=\"randomClass lightseagreen\" id={\"random\"+index} value={index+1} onClick={this.handleRandomQuesFun} />\n            ):this.props.questionCounter == index ? (<input type=\"button\" name=\"random\" class=\"randomClass yellow\" id={\"random\"+index} value={index+1} onClick={this.handleRandomQuesFun} />)\n            :(<input type=\"button\" name=\"random\" class=\"randomClass\" id={\"random\"+index} value={index+1} onClick={this.handleRandomQuesFun} />)\n            }\n          </li>\n        )\n      });\n    return(\n      <div id='ques_buttons_div'>{buttons}</div>\n    )\n  }\n}\n\nexport default QuestionButton;\n\n\n\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport $ from 'jQuery';\nimport QuestionButton from './Navigation/QuestionButton.js'\n\nclass QuestionsNavigation extends React.Component {\n  \n\n  constructor(props) {\n    super(props);\n  }\n  render() {\n  \t\n\n\treturn(\n\t<div id='ques_nav_container' name='ques_nav_container' className=\"ques_nav_container\">\n  \t\t<div id='nav_for_questions' >\n        \t<h2 id='nav_for_questions'> <strong>Navigation for Questions </strong></h2>\n          <h3 id='nav_for_questions'>You can use the below Navigations for checking correct answers </h3>\n    \t</div>\n  \t\t<QuestionButton questionCounter={this.props.questionCounter} selections={this.props.selections} questions={this.props.questions} handleQuestionNavigation={this.props.handleQuestionNavigation}/>\n\t</div>\n\t\n\t)\n\n\n}\n\n}\n\nexport default QuestionsNavigation;\n\n\n\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport $ from 'jQuery';\n\nclass DisplayScore extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state={\n            score : null\n        }\n    }\n\n\n    componentDidMount() {\n        this.displayScore();\n    }\n\n    componentWillUnmount() {\n    }\n\n    // Computes score and returns a paragraph element to be displayed\n    displayScore = () => {\n\n        let score = {\n            positive_marks_1 : parseInt($('#positive_marks_div').text()),\n            negative_marks_1 : parseInt($('#positive_marks_div').text()),\n            totalMarks : $('#total_marks_div').text(),\n            positive_score : 0,\n            negative_score : 0,\n            no_of_correct_ans_ques: 0,\n            no_of_wrong_ans_ques : 0,\n            no_of_not_ans_ques : 0,\n            no_of_attempted_ans_ques : 0,\n            section_total_score_map : new Map(),\n            section_positive_score_map :new Map(),\n            section_negative_score_map : new Map(),\n            section_attempted_questions_map : new Map(),\n            section_un_attempted_questions_map : new Map(),\n            section_correct_attempted_questions_map : new Map(),\n            section_wrong_attempted_questions_map : new Map()\n        }\n\n        // adding some elements to the map\n        score.section_total_score_map.set(\"Maths\", 0);\n        score.section_total_score_map.set(\"Physics\", 0);\n        score.section_total_score_map.set(\"Chemistry\", 0);\n\n        score.section_positive_score_map.set(\"Maths\", 0);\n        score.section_positive_score_map.set(\"Physics\", 0);\n        score.section_positive_score_map.set(\"Chemistry\", 0);\n\n        score.section_negative_score_map.set(\"Maths\", 0);\n        score.section_negative_score_map.set(\"Physics\", 0);\n        score.section_negative_score_map.set(\"Chemistry\", 0);\n\n        score.section_attempted_questions_map.set(\"Maths\", 0);\n        score.section_attempted_questions_map.set(\"Physics\", 0);\n        score.section_attempted_questions_map.set(\"Chemistry\", 0);\n\n        score.section_un_attempted_questions_map.set(\"Maths\", 0);\n        score.section_un_attempted_questions_map.set(\"Physics\", 0);\n        score.section_un_attempted_questions_map.set(\"Chemistry\", 0);\n\n        score.section_correct_attempted_questions_map.set(\"Maths\", 0);\n        score.section_correct_attempted_questions_map.set(\"Physics\", 0);\n        score.section_correct_attempted_questions_map.set(\"Chemistry\", 0);\n\n        score.section_wrong_attempted_questions_map.set(\"Maths\", 0);\n        score.section_wrong_attempted_questions_map.set(\"Physics\", 0);\n        score.section_wrong_attempted_questions_map.set(\"Chemistry\", 0);\n\n        let i = 0;\n        let selections = this.props.selections;\n        let questionsAns = this.props.answers;\n        for (i; i < questionsAns.length; i++) {\n\n            let userAns = selections[i];\n            if (userAns === questionsAns[i].correctAnswer - 1) {\n                score.no_of_attempted_ans_ques += 1;\n\n                let section_score = score.section_total_score_map.get(questionsAns[i].section);\n                section_score += score.positive_marks_1;\n                score.section_total_score_map.set(questionsAns[i].section, section_score);\n\n                let section_score_positive = score.section_positive_score_map.get(questionsAns[i].section);\n                section_score_positive += score.positive_marks_1;\n                score.section_positive_score_map.set(questionsAns[i].section, section_score_positive);\n\n                let section_attempted_questions = score.section_attempted_questions_map.get(questionsAns[i].section);\n                section_attempted_questions += 1;\n                score.section_attempted_questions_map.set(questionsAns[i].section, section_attempted_questions);\n\n                let section_correct_attempted_questions = score.section_correct_attempted_questions_map.get(questionsAns[i].section);\n                section_correct_attempted_questions += 1;\n                score.section_correct_attempted_questions_map.set(questionsAns[i].section, section_correct_attempted_questions);\n\n\n                score.positive_score += score.positive_marks_1;\n                score.no_of_correct_ans_ques += 1;\n            } else if ((userAns !== undefined) && !(isNaN(userAns)) ) {\n\n                score.no_of_attempted_ans_ques += 1;\n                let section_score = score.section_total_score_map.get(questionsAns[i].section);\n                section_score -= score.negative_marks_1;\n                score.section_total_score_map.set(questionsAns[i].section, section_score);\n\n\n                let section_score_negative = score.section_negative_score_map.get(questionsAns[i].section);\n                section_score_negative += score.negative_marks_1;\n                score.section_negative_score_map.set(questionsAns[i].section, section_score_negative);\n\n                let section_attempted_questions = score.section_attempted_questions_map.get(questionsAns[i].section);\n                section_attempted_questions += 1;\n                score.section_attempted_questions_map.set(questionsAns[i].section, section_attempted_questions);\n\n                let section_wrong_attempted_questions = score.section_wrong_attempted_questions_map.get(questionsAns[i].section);\n                section_wrong_attempted_questions += 1;\n                score.section_wrong_attempted_questions_map.set(questionsAns[i].section, section_wrong_attempted_questions);\n\n                score.negative_score += score.negative_marks_1;\n                score.no_of_wrong_ans_ques += 1;\n            } else {\n                let section_un_attempted_questions = score.section_un_attempted_questions_map.get(questionsAns[i].section);\n                section_un_attempted_questions += 1;\n                score.section_un_attempted_questions_map.set(questionsAns[i].section, section_un_attempted_questions);\n                score.no_of_not_ans_ques += 1;\n            }\n        }\n\n        score.finalScore = score.positive_score - score.negative_score;\n        score.timeTakenForTest = 15;\n        \n        this.updateUserScore(score);\n\n        this.setState(previousState => {\n            return { score: score}\n        });\n\n       \n\n        \n    }\n\n    updateUserScore = (score) => {\n         \n\n        let test_id = this.props.testId;\n        test_id = test_id.replace(/\\s+/g, '');\n        let user_id = $('#user_id_div').text();\n        user_id = user_id.replace(/ /g, '');\n\n        /*$.ajax({\n            url: \"/test_update_user_score/\",\n            type: \"POST\",\n            data: {\n                \"test_id\": test_id,\n                \"user_id\": user_id,\n                \"user_score\": score.finalScore,\n                \"positive_score\": score.positive_score,\n                \"negative_score\": score.negative_score,\n                \"correct_answers\": score.no_of_correct_ans_ques,\n                \"wrong_answers\": score.no_of_wrong_ans_ques,\n                \"no_answers\": score.no_of_not_ans_ques,\n                \"no_of_attempted_ans_ques\": no_of_attempted_ans_ques,\n                \"map_total_score\": JSON.stringify(Array.from(score.section_total_score_map.entries())),\n                \"map_positive_score\": JSON.stringify(Array.from(score.section_positive_score_map.entries())),\n                \"map_negative_score\": JSON.stringify(Array.from(score.section_negative_score_map.entries())),\n                \"map_attempted\": JSON.stringify(Array.from(score.section_attempted_questions_map.entries())),\n                \"map_un_attempted\": JSON.stringify(Array.from(score.section_un_attempted_questions_map.entries())),\n                \"map_correct_attempted\": JSON.stringify(Array.from(score.section_correct_attempted_questions_map.entries())),\n                \"map_wrong_attempted\": JSON.stringify(Array.from(score.section_wrong_attempted_questions_map.entries())),\n                \"time_taken_test\": score.timeTakenForTest\n            },\n            success: (data) =>  {},\n            error: (data) =>  {\n                console.log(\"Error updating user score\");\n            }\n        });*/\n    }\n    \n\n    render() {\n        if(this.state.score){\n            return (\n                <div>\n                    <div className=\"darkcyan\"> Report : </div>\n                    <div><span className=\"grey\">Total Questions</span><span className=\"darkcyan\">{this.props.answers.length}</span></div>\n                    <div><span className=\"grey\">Questions Attempted</span><span className=\"darkcyan\">{this.state.score.no_of_attempted_ans_ques}</span></div>\n                    <div><span className=\"grey\">Questions Not Attempted</span><span className=\"darkcyan\">{this.state.score.no_of_not_ans_ques}</span></div>\n                    <div><span className=\"grey\">Your Score</span><span className=\"darkcyan\">{this.state.score.finalScore}/{this.state.score.totalMarks}</span></div>\n                    <div><span className=\"grey\">Positive Marks</span><span className=\"darkcyan\">{this.state.score.positive_score}</span></div>\n                    <div><span className=\"grey\">Negative Marks</span><span className=\"darkcyan\">{this.state.score.negative_score}</span></div>\n                    <div><span className=\"grey\">Answers Correct</span><span className=\"darkcyan\">{this.state.score.no_of_correct_ans_ques}</span></div>\n                    <div><span className=\"grey\">Answers Wrong</span><span className=\"darkcyan\">{this.state.score.no_of_wrong_ans_ques}</span></div>\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n}\n\n\nexport default DisplayScore;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport $ from 'jQuery';\n\n\nclass Timer extends React.Component {\n  \n\n  constructor(props) {\n    super(props);\n    this.state = {\n    \ttime: parseInt(this.props.minutes)*60,\n    \tisOn: false\n\n    }\n  }\n\ncomponentDidMount() {\n\tthis.setState({\n      isOn: true\n\t});\n\tthis.timer = setInterval(() => {\n\t\treturn this.setState(function(prevState){\n\t\t\tlet remainingTime = prevState.time-1;\n\t\t\tif(remainingTime <= 0){\n\t\t\t\tclearInterval(this.timer);\n        this.props.handleTimeOut();\n\t\t\t}\n      return {time: (prevState.time - 1)}\n    });\n  }, 1000);\n}\n\ncomponentWillUnmount(){\n\tthis.setState({isOn: false});\n    clearInterval(this.timer);\n    this.props.handleTimeOut();\n}\n\nsecondsToTime(secs) {\n    var hours = Math.floor(secs / (60 * 60));\n\n    var divisor_for_minutes = secs % (60 * 60);\n    var minutes = Math.floor(divisor_for_minutes / 60);\n\n    var divisor_for_seconds = divisor_for_minutes % 60;\n    var seconds = Math.ceil(divisor_for_seconds);\n\n    var obj = {\n        \"h\": hours,\n        \"m\": minutes,\n        \"s\": seconds\n    };\n    return hours + \" hours \" + minutes + \" minutes \" + seconds + \" seconds\";\n}\n\n \n\n  \n\n  render() {\n\n    return (\n       <span id=\"timerCount\" className=\"timerCount\">{this.state.time < 600 ? \"Last \" +parseInt(this.state.time/60)+ \" minute(s) \" : this.secondsToTime(this.state.time)}</span>\n    );\n  }\n\n}\n\n\nexport default Timer;\n","import React, { Component } from 'react';\nimport Questions from './questions/Questions.js';\nimport QuestionsNavigation from './questions/QuestionsNavigation.js';\nimport DisplayScore from './questions/DisplayScore.js';\nimport Timer from '../timer/Timer.js';\nimport $ from 'jQuery';\n\nclass Quiz extends Component {\n\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\tquizStarted : false,\n\t\t\tminutes :$('#time_in_mins_div').text(),\n\t\t\ttimeRemainderInMin : 10,\n\t\t\ttimesUp : false,\n\t\t\ttestId : $('#test_id_div').text(),\n\t\t\tselections : [],\n\t\t\tquestions: [],\n\t\t\tanswers : [],\n\t\t\tsubmitted : false,\n\t\t\tquestionCounter:0\n\t\t};\n\t}\n\n\thandleSelection = (selections) => {\n\t\treturn this.setState(function(prevState){\n\t\t\treturn {selections : selections}\n\t\t});\n\t}\n\n\n\thandleStartTest = (e)=>{\n\t\te.preventDefault();\n\t\t$('#test_instr_div').hide();\n\t\treturn this.setState(function(prevState){\n\t\t\treturn {quizStarted : !prevState.quizStarted}\n\t\t});\n\t}\n\n\thandleTimeOut = ()=>{\n\t\tthis.submitQuiz();\n\t\treturn this.setState(function(prevState){\n\t\t\treturn {timesUp : !prevState.timesUp}\n\t\t});\n\t}\n\n\n\tsubmitQuiz = () => {\n\t\tthis.getAnswers();\n\t\treturn this.setState(function(prevState){\n\t\t\treturn {submitted : true}\n\t\t});\n\t}\n\n\tgetAnswers = () => {\n        let testId =  $('#test_id_div').text();\n\t    testId = testId.replace(/\\s+/g, '');\n        $.ajax({\n            url: \"/test_get_answers/\",\n            type: \"POST\",\n            data: {\n                \"test_id\": testId\n            },\n            success: (data) => {\n                let parsedData = JSON.parse(data);\n                let answers = parsedData;\n                return this.setState(function(prevState){\n\t\t\t\t\treturn {answers : answers}\n\t\t\t\t});\n            },\n            error: (data) => {\n                console.log(\"Error getting answers from server\");\n            }\n        });\n    }\n\n\tcomponentDidMount() {\n\t\tthis.setConfirmMessage();\n\t\tthis.getQuestions();\n\t}\n\n\tsetConfirmMessage(){\n\t\t/*$(window).on('beforeunload', function() {\n        \t$('#submitQuiz').click();\n        \treturn 'Are you sure you want to leave?';\n    \t});*/\n\t}\n\n\n\tpreventCutCopyPaste(){\n\t\t$(document).bind(\"contextmenu cut copy\",function(e){\n            e.preventDefault();\n        });\n\t}\n\n\n  nextHandler = () => {\n    return this.setState(previousState => {\n      let nextState = previousState.questionCounter+1;\n      return { questionCounter: nextState}\n    });\n  }\n\n  prevHandler = () => {\n    return this.setState(previousState => {\n      let prevState = previousState.questionCounter-1;\n      return { questionCounter: prevState}\n    });\n  }\n\n\tgetQuestions =  () => {\n\t\tlet testId =  $('#test_id_div').text();\n\t    testId = testId.replace(/\\s+/g, '');\n\t    $.ajax({\n\t        url: \"/test_get_questions/\",\n\t        type: \"POST\",\n\t        data: {\n\t            \"test_id\": testId\n\t        },\n\t        success : (data) => {\n\t            let parsedData = JSON.parse(data);\n\t            return this.setState(previousState => {\n\t              return { questions: parsedData }\n\t            });\n\t        },\n\t        error : (data) => {\n\t            console.log(\"Error getting questions from server\");\n\t        }\n\t    });\n  \t}\n\n  \thandleQuestionNavigation=(index)=>{\n  \t\treturn this.setState(previousState => {\n          return { questionCounter: index}\n        });\n  \t}\n\t\n\trender() {\n\t\tconsole.log(this.state);\n\t\treturn (\n\t\t\t<div>\n\t\t\t{this.state.quizStarted && !this.state.submitted && <Timer minutes={this.state.minutes} timeRemainderInMin={10} handleTimeOut={this.handleTimeOut}/>}\n\t\t\t\n\t\t\t{this.state.timesUp && !this.state.submitted && \n\t\t\t\t<p id=\"timeUp\">Time up. Submitting the quiz.</p> }\n\t\t\t\n\n\t\t\t{(this.state.submitted && this.state.answers.length) ? (\n\t\t\t\t<div>\n\t\t\t\t<DisplayScore testId={this.state.testId} selections={this.state.selections} questions={this.state.questions} answers={this.state.answers}/>\n\t\t\t\t</div>\n\t\t\t):\n\t\t\t (!this.state.quizStarted ? (\n\n\t\t\t\t<div class='button' id='startQuiz'><a href='#' onClick={this.handleStartTest}>Start Test</a></div>\n\t\t\t):\n\t\t  \t\n\t\t  \t(this.state.questions.length && !this.state.submitted ? (<div>\n\t\t  \t<Questions nextHandler={this.nextHandler} prevHandler={this.prevHandler} testId={this.state.testId} handleSelection={this.handleSelection} questions={this.state.questions} questionCounter={this.state.questionCounter}/>\n\t\t  \t<div class='submitQuiz'><a href='#' id='submitQuiz' onClick={this.submitQuiz}>Submit</a></div>\n\t\t  \t<QuestionsNavigation questionCounter={this.state.questionCounter} questions={this.state.questions} handleQuestionNavigation={this.handleQuestionNavigation} selections={this.state.selections}/>\n\t\t  \t</div>) : (<div></div>)\n\t\t  \t))}\n\t\t  \t</div>\n\t\t)\n\t}\n}\n\nexport default Quiz;","import React, { Component } from 'react';\nimport Quiz from './quiz/Quiz.js';\n\nclass App extends Component {\n  render() {\n    return (\n      <Quiz />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('quiz'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}